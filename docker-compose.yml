---
version: "3"
services:
  db:
    image: "postgres:14"
    restart: unless-stopped
    volumes:
      - "db_data:/var/lib/postgresql/data"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=mysecretpassword
      - POSTGRES_DB=mydb

  backend:
    build:
      context: ./backend
    image: "deep-ilia-backend:1.0"
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.back-router.rule=PathPrefix(`/api`) || PathPrefix(`/media`) || PathPrefix(`/admin`) || PathPrefix(`/static`)"
      - "traefik.http.routers.back-router.entrypoints=http"
      - "traefik.http.services.back-service.loadbalancer.server.port=8000"
    volumes:
      - "backend_media:/app/media"

  frontend:
    build:
      context: ./frontend
    image: "deep-ilia-frontend:1.0"
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.deepilia-router.rule=PathPrefix(`/`)"
      - "traefik.http.routers.deepilia-router.entrypoints=http"
      - "traefik.http.services.deepilia-service.loadbalancer.server.port=80"

  proxy:
    image: "traefik:v2.5.4"
    restart: unless-stopped
    command:
      - "--accesslog.filepath=/logs/access.log"
      - "--providers.docker"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.http.address=:80"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "80:80"

volumes:
  db_data:
  backend_media:
